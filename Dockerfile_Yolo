# ============================================
# YOLO Object Detection Docker Image
# Base: Debian 12 (Bookworm) - matches Raspberry Pi OS
# Optimized for Raspberry Pi 5 ARM64
# ============================================

FROM debian:bookworm-slim

# Prevent interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# ============================================
# INSTALL SYSTEM PACKAGES
# ============================================
RUN apt-get update && apt-get install -y \
    # GStreamer core
    gstreamer1.0-tools \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-x \
    \
    # Python and GStreamer bindings
    python3 \
    python3-pip \
    python3-gi \
    python3-gi-cairo \
    gir1.2-gstreamer-1.0 \
    gir1.2-gst-plugins-base-1.0 \
    \
    # NumPy (system package, pre-compiled for ARM)
    python3-numpy \
    \
    # OpenCV (system package, includes NMS functionality)
    python3-opencv \
    \
    # Cairo for drawing
    libcairo2 \
    \
    # X11 for display
    libx11-6 \
    libxv1 \
    \
    # Build tools (needed for pip packages)
    python3-dev \
    build-essential \
    \
    # Clean up to reduce image size
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# ============================================
# SET WORKING DIRECTORY
# ============================================
WORKDIR /app

# ============================================
# INSTALL PYTHON PACKAGES VIA PIP
# ============================================
# Copy requirements first (Docker layer caching optimization)
COPY requirements.txt .

# Install Python packages
# Use --break-system-packages for Debian 12 (PEP 668 compliance)
RUN pip3 install --no-cache-dir --break-system-packages -r requirements.txt || \
    pip3 install --no-cache-dir -r requirements.txt

# ============================================
# COPY APPLICATION CODE
# ============================================
COPY src/ ./src/

# ============================================
# ENVIRONMENT VARIABLES
# ============================================
# These can be overridden at runtime with -e flag
ENV MODEL_PATH=/models/current.onnx
ENV DISPLAY=:0

# ============================================
# RUN THE APPLICATION
# ============================================
CMD ["python3", "src/main_pyside_Gst.py"]